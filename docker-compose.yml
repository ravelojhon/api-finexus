version: '3.8'

services:
  db:
    image: postgres:15
    container_name: finexus_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: productdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - finexus_network

  backend:
    build: .
    container_name: finexus_backend
    ports:
      - "4000:4000"
    depends_on:
      - db
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/productdb?schema=public"
      PORT: 4000
    networks:
      - finexus_network

  postgrest:
    image: postgrest/postgrest:v11.2.0
    container_name: finexus_postgrest
    environment:
      PGRST_DB_URI: postgres://postgres:postgres@db:5432/productdb
      PGRST_DB_SCHEMAS: public
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      PGRST_DB_USE_LEGACY_GUCS: "false"
    ports:
      - "3001:3000"
    depends_on:
      - db
    networks:
      - finexus_network

  # Usuario anónimo para PostgREST
  postgres_setup:
    image: postgres:15
    container_name: finexus_postgres_setup
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: productdb
    depends_on:
      - db
    networks:
      - finexus_network
    command: |
      sh -c "
        echo 'Esperando a que PostgreSQL esté listo...'
        sleep 10
        echo 'Configurando usuario anónimo para PostgREST...'
        PGPASSWORD=postgres psql -h db -U postgres -d productdb -c \"CREATE ROLE anon NOLOGIN;\"
        PGPASSWORD=postgres psql -h db -U postgres -d productdb -c \"GRANT USAGE ON SCHEMA public TO anon;\"
        PGPASSWORD=postgres psql -h db -U postgres -d productdb -c \"GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO anon;\"
        PGPASSWORD=postgres psql -h db -U postgres -d productdb -c \"ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO anon;\"
        echo 'Configuración completada!'
      "

volumes:
  postgres_data:

networks:
  finexus_network:
    driver: bridge
